Added Candle Block Implementation for Caves & Cliffs Update

This implementation includes:
- Base CandleBlock class with stacking mechanics (1-4 candles)
- Support for 16 color variants
- Light emission based on candle count
- Waterlogging support
- Interaction mechanics (lighting, extinguishing)
- Comprehensive test suite

All tests pass successfully.

Begin Wild Update implementation with Deep Dark biome

- Created DeepDarkBiome class with proper environment settings
- Added sculk feature generation for the Deep Dark biome
- Implemented SculkSensorBlock with vibration detection
- Created tests for the Deep Dark biome functionality
- Updated project documentation with new Wild Update tasks
- Verified Weather System and Lightning Rod implementation is complete
- Updated directory.txt with new files and components

feat(wild-update): Implement Boat with Chest feature

This commit adds the Boat with Chest feature from the Wild Update:

- Fix entity ID preservation in Entity.deserialize
- Update Boat entity to support inventory storage for chest boats
- Improve Boat serialization and deserialization for proper persistence
- Ensure proper item drops when breaking boats with chests
- Fix boat breaking mechanics to drop both the boat and its contents
- Create comprehensive tests for all Boat with Chest functionality

This implementation allows players to store items in boats with chests (27 slots),
supports all wood types, and correctly handles serialization, breaking, and drops.
All tests are now passing for this feature.

Part of: The Wild Update implementation 

feat(mobs): Complete Sniffer mob implementation for Trails & Tales Update

- Implemented Sniffer mob with special sniffing and digging behaviors
- Added ancient seed finding mechanics and drops (Torchflower seeds, Pitcher pods)
- Implemented breeding system using Torchflower seeds
- Added growth system for baby Sniffers
- Implemented shearing interaction to obtain Sniffer eggs
- Added comprehensive tests in snifferTest.js
- Updated project documentation in project.txt and ai-logic.txt
- Registered Sniffer in the mobManager

This completes the Sniffer mob implementation for the Trails & Tales Update. The Sniffer
is a unique passive mob that can find ancient seeds, breed, and has baby-to-adult growth.
Players can interact with Sniffers to breed them or shear them for eggs. 

feat(armor-trims): Complete armor trims implementation

- Fixed SmithingTable.process method to properly handle upgrade recipes
- Added improved transferItemProperties method for preserving item attributes
- Fixed matchesRecipe function to handle armor types more effectively
- Added case-insensitive comparison for armor materials
- All tests now passing for armor trim functionality
- Updated project.txt to mark feature as complete
- Updated ai-logic.txt with implementation documentation 

Implement Chiseled Bookshelf feature

This commit adds the Chiseled Bookshelf feature from the Trails & Tales Update:

- Implemented ChiseledBookshelfBlock with:
  - 6-slot inventory for book storage
  - Slot-specific interaction
  - Redstone signal output
  - Rotation-aware front face
  
- Implemented ChiseledBookshelfItem for block placement

- Added comprehensive tests in chiseledBookshelfTest.js

- Updated block and item registries

- Added documentation and updated project files

All tests pass successfully. This completes the Chiseled Bookshelf feature for the Trails & Tales Update. 

Add Ominous Bottle implementation for 1.22 Sorcery Update

- Created OminousBottleItem class for capturing Bad Omen effect from raid captains
- Added ability to store and apply captured effects
- Implemented raid captain detection logic
- Added visual feedback for filled bottles
- Integrated with ItemRegistry for proper game access
- Created comprehensive test suite with all test cases passing
- Updated project.txt to mark feature as complete 

feat(magic): Complete spell mechanics system for 1.22 Sorcery Update

This commit adds the comprehensive spell mechanics system for the Minecraft 1.22 "Sorcery Update":

- Implemented SpellManager for handling spell registration, casting, and effect management
- Created SpellRegistry with spell types, elements, categories, and rarity levels
- Added SpellBookItem for learning and casting spells with durability system
- Implemented SpellScrollItem as single-use spell items that can bypass mana requirements
- Created SpellAltarBlock for crafting and upgrading spells with visual effects
- Implemented mana resource system with regeneration and cooldowns
- Added comprehensive tests in spellSystemTest.js

All tests are passing successfully, completing the core spell mechanics feature for the Sorcery Update. 

feat(update): Complete Minecraft 1.22 Sorcery Update implementation

This commit marks the completion of all features for the Minecraft 1.22 "Sorcery Update":

1. Wind Turbine structure
2. Wolf armor mechanics 
3. Ominous Bottles
4. Armadillo mob
5. Spell mechanics system

All features have been fully implemented with comprehensive test coverage and verified to be working correctly. The project.txt file has been updated to mark all features as complete and prepare for the next update cycle.

The Sorcery Update adds significant new gameplay mechanics through the spell system, renewable energy through wind turbines, pet protection with wolf armor, and new mob interactions with the armadillo. 

feat(planning): Prepare for Minecraft 1.23 Update implementation

This commit adds preparation work for the upcoming Minecraft 1.23 Update:

- Created comprehensive research document (minecraft-1.23-research.md) outlining five major features
- Developed detailed implementation plan (minecraft-1.23-implementation-plan.md) with phased approach
- Created test framework structure (minecraft123TestFramework.js) with test suites for all features
- Implemented test runner (runMinecraft123Tests.js) for Minecraft 1.23 tests
- Updated project.txt to mark Sorcery Update as complete and add Minecraft 1.23 tasks
- Updated directory.txt with new files and descriptions
- Added development progress to ai-logic.txt

This completes the preparation phase for the Minecraft 1.23 Update. The next step will be implementing the Copper Golem feature as identified in the implementation plan. 